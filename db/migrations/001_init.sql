-- ALIRA Database Schema
-- Migration: 001_init.sql

-- Enable UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Leads table - stores form submissions
CREATE TABLE IF NOT EXISTS leads (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  created_at TIMESTAMPTZ DEFAULT NOW(),
  business_name TEXT NOT NULL,
  industry TEXT,
  stage TEXT,
  challenges TEXT,
  goals_short TEXT,
  goals_long TEXT,
  resources TEXT,
  budget TEXT,
  timeline TEXT,
  service TEXT,
  contact_name TEXT,
  email TEXT NOT NULL,
  notes TEXT,
  consent BOOLEAN DEFAULT FALSE
);

-- Business cases table - stores generated business cases
CREATE TABLE IF NOT EXISTS business_cases (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  created_at TIMESTAMPTZ DEFAULT NOW(),
  lead_id UUID REFERENCES leads(id) ON DELETE CASCADE,
  outline JSONB NOT NULL,   -- AI generated structure
  pdf_url TEXT,             -- Supabase Storage public URL
  status TEXT DEFAULT 'generated',
  file_name TEXT            -- Original filename for download
);

-- Events table - stores analytics events
CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  name TEXT NOT NULL,
  metadata JSONB,
  page_name TEXT,
  user_agent TEXT
);

-- Indexes for performance
CREATE INDEX IF NOT EXISTS idx_leads_email ON leads(email);
CREATE INDEX IF NOT EXISTS idx_leads_created_at ON leads(created_at);
CREATE INDEX IF NOT EXISTS idx_business_cases_lead_id ON business_cases(lead_id);
CREATE INDEX IF NOT EXISTS idx_business_cases_created_at ON business_cases(created_at);
CREATE INDEX IF NOT EXISTS idx_events_name ON events(name);
CREATE INDEX IF NOT EXISTS idx_events_created_at ON events(created_at);

-- Row Level Security (enabled but permissive for now)
ALTER TABLE leads ENABLE ROW LEVEL SECURITY;
ALTER TABLE business_cases ENABLE ROW LEVEL SECURITY;
ALTER TABLE events ENABLE ROW LEVEL SECURITY;

-- Public policies (can be tightened later)
CREATE POLICY "write_leads_public" ON leads
FOR INSERT WITH CHECK (true);

CREATE POLICY "read_own_cases_public" ON business_cases
FOR SELECT USING (true);

CREATE POLICY "write_events_public" ON events
FOR INSERT WITH CHECK (true);

-- Comments for documentation
COMMENT ON TABLE leads IS 'Form submissions from the ALIRA business case generator';
COMMENT ON TABLE business_cases IS 'Generated business cases linked to leads';
COMMENT ON TABLE events IS 'Analytics events for tracking user interactions';
